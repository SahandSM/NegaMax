a646af13edcf810ff8dd69880d109b2ff7e44c84
    sahand: initiated adding the negamax.py file and other files along with it.

475617a27c200fca5ec04d955089454f7a9797c5:
    so far, the negamax is completely implementeed with che_terminal in place.
    it is still working with the dummy functions simple_heuristic(), get_moves(), apply_move().
    I am creating a branch to connect to gameutils.
    I will first replace get_valid_moves() and use apply_player_action() from game utils.

a63d72a283e901f203f6190b2750e6fc54be6f17
    order_moves() was crashing in when agent was winning with next move.
    reason: the length of the pv[] was less than the length of depth-1 even at root node.
    lots of lines in order_moves() was unncessary.
    improved and corrected.

fdbaa54351e387af742c448bc9f7a37517babc46:
    I have to reset pv when before returning to main file. because next time the main file apsses
    the board to the agent, the pv and Node.instances are saved from before.

23605795bcd9510b02760d99da29d4273ab98f03
    ongoing work on heuristic.
    probelms: 1) the virtual row is making problems. if it is all zero, sometimes extended three piece is detected.
                 if it is all ones, some times prevents three piece detection (in case of row for example)
              2) XXXO and OXXX are not detected as three pieces.

1a131a907242e8344411917dca6a8f877e5cb87a
    The approach to take and between pairs of shifted strings to identify the windows with three pieces didn't work completely fine.
    the two patterns OXXX and XXXO were missed.
    also, the virtual row made some mistakes.
    decided take a new approach on a new branch.